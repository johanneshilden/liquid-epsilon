DATA Err
  | *                   range      : Range

DATA Err
  | UnifyClash          ty1        : {Ty}
                        ty2        : {Ty}
                        fiMode     : {FIMode}
                        ty1detail  : {Ty}
                        ty2detail  : {Ty}
                        fiModeD    : {FIMode}

DATA Err
  | NamesNotIntrod      kind       : String
                        nmL        : {[ThingAndRange PP_Doc]}

DATA Err
  | PatArity            ty         : {Ty}
                        arity      : {Int}
  | PatArity2           kind       : String
                        what       : {PP_Doc}
                        arity      : {Int}

DATA Err
  | NamesDupIntrod      kind       : String
                        nmL        : {[ThingAndRange HsName]}
  | NestedIn            wher       : {PP_Doc}
                        errL       : ErrL

TYPE ErrL       = [Err]

DATA Err
  | Fixity              op1        : {PP_Doc}
                        op2        : {PP_Doc}

DATA Err
  | UnifyOccurs         ty1        : {Ty}
                        ty2        : {Ty}
                        fiMode     : {FIMode}
                        tvar       : {TyVarId}
                        ty2detail  : {Ty}
                        fiModeD    : {FIMode}
  | OccurCycle          tvar       : {TyVarId}
                        ty         : {Ty}

DATA Err
  | Newtype             tyNm       : {HsName}
  | FunPatternLengths	funNm      : {HsName}

DATA Err
  | MissingRowLabels    nmL        : {[HsName]}
                        ty         : {Ty}
  | TooManyRowLabels    nmL        : {[HsName]}
                        ty         : {Ty}

DATA Err
  | InconsistentIntros  kind       : String
                        nmL        : {[HsName]}
  | MissingDataFields   nmL        : {[HsName]}
                        con        : {HsName}
  | MissingAnyDataField nmL        : {[HsName]}
                        tyNm       : {HsName}
  | DuplicateDataFields nmL        : {[HsName]}

DATA Err
  | FileNotFound        fileName   : {String}
                        locations  : {[String]}
                        suffixes   : {[FileSuffix]}
  | AmbiguousExport     name       : {HsName}
                        entities   : {[ThingAndRange HsName]}
  | PP                  pp         : {PP_Doc}

DATA Err
  | IllegalFFIWay       ffiWay     : {FFIWay}
  | TyCoreMatchClash    ty1        : {PP_Doc}
                        ty2        : {PP_Doc}
                        ty1detail  : {Maybe PP_Doc}
                        ty2detail  : {Maybe PP_Doc}
  | TyCoreSeqLevels     hereLev    : {Int}
                        mustLev    : {Int}
                        ty         : {PP_Doc}
  | NoCoerceDerivation  ty1        : {Ty}
                        ty2        : {Ty}
                        fiMode     : {FIMode}
                        func       : {Ty}
                        arg        : {Ty}

DATA Err
  | PrfCutOffReached    pred       : {PredOcc}
                        depth      : {Int}
  | NotProvenPreds      preds      : {[((Pred,[Range]),PP_Doc)]}
  | AmbigPreds          preds      : {[(Pred,[Range])]}
                        inQBinds   : {AssocL HsName PP_Doc} -- quantified
                        inBinds    : {AssocL HsName PP_Doc} -- unquantified
  | OverlapPreds        overl      : {AssocL Pred [PP_Doc]}
  | TyHasFreeTVars      ty         : {Ty}
  | DeclsNotAllowed     inside     : String
                        decls      : {AssocL IdOccKind [HsName]}
  | ValWithoutSig       nmL        : {[HsName]}
  | NoMostSpecificPred  pred1      : {Pred}
                        pred2      : {Pred}
  | EvidenceAltsLeft

DATA Err
  | MalformedPred       pp         : {PP_Doc}

DATA Err
  | TyBetaRedLimit      ty         : {Ty}
                        tyTo       : {Ty}
                        limit      : {Int}

DATA Err
  | MayOnlyHaveNrMain   nrAllowed  : Int        -- 0 or 1, depending on option ehcOptDoLinking
                        prevModNmL : {[HsName]} -- possible previous modules in which main was defined
                        modNm      : HsName
  | MayNotHaveMain      modNm      : HsName
  | MustHaveMain
  | ModNameMismatch     nmOfFile   : HsName
                        nmFromSrc  : HsName
  | AmbiguousNameRef    kindName   : {String}
                        kind       : {String}
                        nm         : HsName
                        nmAlts     : {[HsName]}
  | MutRecModules       mutRecL    : {[[HsName]]}

DATA Err
  | MalformedTy         kind       : String
                        purpose    : String
                        ty         : Ty
  | NoDerivFor          pred       : PP_Doc
  | NoDerivForData      ty         : Ty
                        clNm       : HsName
                        reason     : String

DATA Err
  | FusionBuildInverse  ty1        : {Ty}
                        ty2        : {Ty}

DATA Err
  | InconsistentHI      modNm      : String
                        file       : String
                        expected   : {[String]}
                        inHI       : {[String]}
  | WrongMagic          modNm      : String
                        file       : String

